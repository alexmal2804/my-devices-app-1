import { OpenAI } from 'openai'
import { ChatCompletionMessageParam } from 'openai/resources/chat'
import { createRAGContext } from './ragService'
import { checkDocumentsAvailability } from './supabaseClient'

const VITE_AI_TUNNEL_KEY = import.meta.env.VITE_AI_TUNNEL_KEY
const VITE_AI_TUNNEL_URL =
  import.meta.env.VITE_VITE_AI_TUNNEL_URL || 'https://api.aitunnel.ru/v1'

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
const client = new OpenAI({
  apiKey: VITE_AI_TUNNEL_KEY,
  baseURL: VITE_AI_TUNNEL_URL,
  dangerouslyAllowBrowser: true,
})

export async function sendMessageToAI(
  message: string,
  history: { sender: string; text: string }[],
  employee: any,
  device: any
): Promise<string> {
  console.log(
    'üöÄ AI Service: –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è:',
    message.substring(0, 100)
  )

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ RAG
  let ragContext = ''
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑–µ
    console.log('üìä AI Service: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ...')
    const docStatus = await checkDocumentsAvailability()
    console.log(
      'üìä AI Service: –°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ - –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:',
      docStatus.documentsCount,
      '—á–∞–Ω–∫–æ–≤:',
      docStatus.chunksCount
    )

    if (docStatus.chunksCount === 0) {
      console.log('‚ö†Ô∏è AI Service: –í –±–∞–∑–µ –Ω–µ—Ç —á–∞–Ω–∫–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞')
    } else {
      console.log(
        'üîç AI Service: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º RAG –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è:',
        message.substring(0, 100)
      )
      ragContext = await createRAGContext(message)
      console.log('üîÑ AI Service: RAG —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')

      if (ragContext && ragContext.trim()) {
        console.log(
          '‚úÖ AI Service: RAG –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞:',
          ragContext.length,
          '—Å–∏–º–≤–æ–ª–æ–≤'
        )
        console.log(
          'üìù AI Service: –ü—Ä–µ–≤—å—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:',
          ragContext.substring(0, 300) + '...'
        )
      } else {
        console.log('‚ö†Ô∏è AI Service: RAG –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
    }
  } catch (error) {
    console.error('‚ùå AI Service: RAG –ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error)
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ –∏–∑ –§–ò–û
  const getNameAndPatronymic = (fio: string) => {
    if (!fio) return ''
    const parts = fio.trim().split(/\s+/)
    if (parts.length >= 3) {
      // –§–æ—Ä–º–∞—Ç: –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ
      return `${parts[1]} ${parts[2]}`
    } else if (parts.length >= 2) {
      // –§–æ—Ä–º–∞—Ç: –§–∞–º–∏–ª–∏—è –ò–º—è
      return parts[1]
    }
    return fio
  }

  const nameAndPatronymic = employee?.fio
    ? getNameAndPatronymic(employee.fio)
    : ''
  const isFirstMessage = history.length === 0

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —É—á–µ—Ç–æ–º RAG –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const systemPrompt = `
–¢—ã ‚Äî AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ò–¢-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é.
${
  isFirstMessage && nameAndPatronymic
    ? `–í –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏ –∏ –æ—Ç—á–µ—Å—Ç–≤—É: "${nameAndPatronymic}". –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${nameAndPatronymic}!" –∏–ª–∏ "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${nameAndPatronymic}!". –ó–∞—Ç–µ–º –∫—Ä–∞—Ç–∫–æ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è –∫–∞–∫ AI-–ø–æ–º–æ—â–Ω–∏–∫ –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –¥–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.`
    : '–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é.'
}

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ: ${JSON.stringify(employee)}
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏: ${JSON.stringify(device)}

${
  ragContext && ragContext.trim()
    ? `\n=== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –î–û–ö–£–ú–ï–ù–¢–û–í ===\n${ragContext}\n=== –ö–û–ù–ï–¶ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò ===\n\n–ò–°–ü–û–õ–¨–ó–£–ô –≠–¢–£ –ò–ù–§–û–†–ú–ê–¶–ò–Æ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –ï—Å–ª–∏ –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –µ—Å—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –µ—ë –≤ –æ—Ç–≤–µ—Ç–µ.`
    : ''
}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –ï—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –Ω—É–∂–Ω–æ —É–ø–æ–º—è–Ω—É—Ç—å CTC, –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è'. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.
- –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —ç—Ç–æ–º—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é ‚Äî –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏, —á—Ç–æ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Ç–æ–ª—å–∫–æ –ø–æ –Ω–µ–º—É, —É–∫–∞–∂–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.
- –ï—Å–ª–∏ ctc < 20 ‚Äî —Å–æ–æ–±—â–∏ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–ª–∞–Ω–æ–≤–æ–π –∑–∞–º–µ–Ω—ã.
- –ï—Å–ª–∏ status != "–∏—Å–ø—Ä–∞–≤–µ–Ω" ‚Äî –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é.
- –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ, –≤—ã–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è —Å –º–∞—Ä–∫–µ—Ä–æ–º [TICKET] –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏.
- –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –±–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ markdown: *–∫—É—Ä—Å–∏–≤*, **–∂–∏—Ä–Ω—ã–π**, —Å–ø–∏—Å–∫–∏, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç—ã –≤—ã–≥–ª—è–¥–µ–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
- –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–π –µ—ë –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º. –ò—Å–ø–æ–ª—å–∑—É–π –≤–µ–∂–ª–∏–≤—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.
${
  isFirstMessage && nameAndPatronymic
    ? `- –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${nameAndPatronymic}!" –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ.`
    : ''
}
`

  console.log(
    'üìã AI Service: –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω, –¥–ª–∏–Ω–∞:',
    systemPrompt.length
  )
  if (ragContext && ragContext.trim()) {
    console.log('üéØ AI Service: –í –ø—Ä–æ–º–ø—Ç –≤–∫–ª—é—á–µ–Ω RAG –∫–æ–Ω—Ç–µ–∫—Å—Ç!')
  }

  const messages: ChatCompletionMessageParam[] = [
    {
      role: 'system',
      content: systemPrompt,
    },
    ...history.map((msg) => {
      const role = msg.sender === 'user' ? 'user' : 'assistant'
      const message: ChatCompletionMessageParam = { role, content: msg.text }
      return message
    }),
    {
      role: 'user',
      content: message,
    },
  ]

  console.log('ü§ñ AI Service: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ AI –º–æ–¥–µ–ª–∏...')
  const response = await client.chat.completions.create({
    model: 'deepseek-chat',
    messages,
    max_tokens: 2000,
    temperature: 0.8,
  })

  const result =
    response.choices?.[0]?.message?.content || '–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI'
  console.log('üì® AI Service: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç AI, –¥–ª–∏–Ω–∞:', result.length)

  return result
}

// –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
export function testFunction(): string {
  return 'Test function works!'
}

// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log(
  'üîß aiService.ts –∑–∞–≥—Ä—É–∂–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è sendMessageToAI —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞:',
  typeof sendMessageToAI
)
